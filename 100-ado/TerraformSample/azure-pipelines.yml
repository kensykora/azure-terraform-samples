pool:
  vmImage: ubuntu-latest
stages:
  - stage: build
    jobs:
      - job: build_terraform_dev
        displayName: Build Terraform
        steps:
          - task: AzureCLI@2
            displayName: Terraform Dev Plan
            inputs:
              scriptType: pscore
              azureSubscription: azure
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              useGlobalConfig: true
              failOnStandardError: true
              powerShellIgnoreLASTEXITCODE: false
              workingDirectory: tf/env/dev
              inlineScript: |
                # Propagate pipeline Service Principal as Terraform variables
                $env:ARM_CLIENT_ID       ??= $env:servicePrincipalId
                $env:ARM_CLIENT_SECRET   ??= $env:servicePrincipalKey
                $env:ARM_TENANT_ID       ??= $env:tenantId
                # Propagate from Azure CLI context
                $env:ARM_TENANT_ID       ??= $(az account show --query tenantId -o tsv)
                $env:ARM_SUBSCRIPTION_ID ??= $(az account show --query id -o tsv)    
                terraform init
                terraform plan
          - task: AzureCLI@2
            displayName: Terraform Prod Plan
            inputs:
              scriptType: pscore
              azureSubscription: azure
              addSpnToEnvironment: true
              scriptLocation: inlineScript
              useGlobalConfig: true
              failOnStandardError: true
              powerShellIgnoreLASTEXITCODE: false
              workingDirectory: tf/env/prod
              inlineScript: |
                # Propagate pipeline Service Principal as Terraform variables
                $env:ARM_CLIENT_ID       ??= $env:servicePrincipalId
                $env:ARM_CLIENT_SECRET   ??= $env:servicePrincipalKey
                $env:ARM_TENANT_ID       ??= $env:tenantId
                # Propagate from Azure CLI context
                $env:ARM_TENANT_ID       ??= $(az account show --query tenantId -o tsv)
                $env:ARM_SUBSCRIPTION_ID ??= $(az account show --query id -o tsv)
                terraform init
                terraform plan
          - publish: tf
            condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
            artifact: tf

  - stage: dev
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - deployment: deploy_dev
        displayName: Dev
        environment: dev
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifact: tf
                    path: $(Pipeline.Workspace)/tf
                - task: AzureCLI@2
                  displayName: Terraform Deploy
                  inputs:
                    scriptType: pscore
                    azureSubscription: azure
                    addSpnToEnvironment: true
                    scriptLocation: inlineScript
                    useGlobalConfig: true
                    failOnStandardError: true
                    powerShellIgnoreLASTEXITCODE: false
                    workingDirectory: $(Pipeline.Workspace)/tf/env/dev
                    inlineScript: |
                      # Propagate pipeline Service Principal as Terraform variables
                      $env:ARM_CLIENT_ID       ??= $env:servicePrincipalId
                      $env:ARM_CLIENT_SECRET   ??= $env:servicePrincipalKey
                      $env:ARM_TENANT_ID       ??= $env:tenantId
                      # Propagate from Azure CLI context
                      $env:ARM_TENANT_ID       ??= $(az account show --query tenantId -o tsv)
                      $env:ARM_SUBSCRIPTION_ID ??= $(az account show --query id -o tsv)
                      terraform init
                      terraform apply --auto-approve
  - stage: prod
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    jobs:
      - deployment: deploy_prod
        displayName: Prod
        environment: prod
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  inputs:
                    artifact: tf
                    path: $(Pipeline.Workspace)/tf
                - task: AzureCLI@2
                  displayName: Terraform Deploy
                  inputs:
                    scriptType: pscore
                    azureSubscription: azure
                    addSpnToEnvironment: true
                    scriptLocation: inlineScript
                    useGlobalConfig: true
                    failOnStandardError: true
                    powerShellIgnoreLASTEXITCODE: false
                    workingDirectory: $(Pipeline.Workspace)/tf/env/prod
                    inlineScript: |
                      # Propagate pipeline Service Principal as Terraform variables
                      $env:ARM_CLIENT_ID       ??= $env:servicePrincipalId
                      $env:ARM_CLIENT_SECRET   ??= $env:servicePrincipalKey
                      $env:ARM_TENANT_ID       ??= $env:tenantId
                      # Propagate from Azure CLI context
                      $env:ARM_TENANT_ID       ??= $(az account show --query tenantId -o tsv)
                      $env:ARM_SUBSCRIPTION_ID ??= $(az account show --query id -o tsv)
                      terraform init
                      terraform apply --auto-approve
